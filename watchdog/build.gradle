apply plugin: 'java'
apply from: "$rootProject.projectDir/gradle/packaging.gradle"

smartyFacts {
    api {
        enableJavadoc()
        enableSourceJar()
    }
}

// Specify all the dependencies.
dependencies {

    compile elastic([group: 'com.continuuity', name: 'common', version: "${version}", changing: true], "common")
    compile elastic([group: 'com.continuuity', name: 'data-fabric', version: "${version}", changing: true], "data-fabric")

    apiCompile libraries.slf4j_api

    apiCompile libraries.slf4j_api
    apiCompile libraries.google_guava
    compile libraries.google_gson
    compile libraries.google_guava
    compile libraries.google_guice
    compile libraries.google_guice_multibindings
    compile libraries.jsr_305
    compile libraries.netty
    compile libraries.slf4j_api
    compile libraries.weave_common
    compile libraries.weave_core
    compile (libraries.weave_yarn) {
        exclude group: 'org.apache.hadoop'
    }
    compile libraries.weave_zookeeper

    compile libraries.hadoop_annotations
    compile libraries.hadoop_auth
    compile libraries.hadoop_common
    compile libraries.hadoop_yarn_api
    compile libraries.hadoop_yarn_client
    compile libraries.hadoop_yarn_common

    // Kafka dependencies
    compile group: 'kafka', name: 'kafka', version: '0.8.0'
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.8.0'
    compile group: 'com.101tec', name: 'zkclient', version: '0.2'

    testCompile libraries.junit
    testCompile(libraries.hbase_test) {
        exclude module: 'junit'
        exclude group: 'commons-logging'
        exclude group: 'org.apache.thrift'
    }
    testCompile libraries.hadoop_minicluster
    testCompile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.5'
}

/**
 * Includes API output to main and test source sets.
 */
sourceSets {
    main {
        compileClasspath += api.output
        runtimeClasspath += api.output
    }
    test {
        compileClasspath += api.output
        runtimeClasspath += api.output
    }
}

/**
 * Generates API javadoc.
 */
javadoc {
    classpath += sourceSets.api.output
}

/**
 * Use io.netty instead of org.jboss.netty
 */
configurations {
    all*.exclude group: 'org.jboss.netty', module: 'netty'
    all*.exclude group: 'asm', module: 'asm'
}
