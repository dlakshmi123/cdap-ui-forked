/*
 * Copyright Â© 2018 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package co.cask.cdap.proto.metadata.lineage;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.annotation.Nullable;

/**
 * Represents the lineage summary associated with the field of a dataset.
 * Summary in the backward direction includes the information about the fields
 * and corresponding datasets which were responsible for generating the field,
 * while summary in the forward direction includes the target fields along with
 * their dataset information which got generated by this field.
 */
public class FieldLineageSummary {
  private final List<FieldLineageSummaryRecord> backward;
  private final List<FieldLineageSummaryRecord> forward;

  public FieldLineageSummary(@Nullable List<FieldLineageSummaryRecord> backward,
                             @Nullable List<FieldLineageSummaryRecord> forward) {
    this.backward = backward == null ? null : Collections.unmodifiableList(new ArrayList<>(backward));
    this.forward = forward == null ? null : Collections.unmodifiableList(new ArrayList<>(forward));
  }

  @Nullable
  public List<FieldLineageSummaryRecord> getBackward() {
    return backward;
  }

  @Nullable
  public List<FieldLineageSummaryRecord> getForward() {
    return forward;
  }
}
